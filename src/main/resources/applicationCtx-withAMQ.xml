<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:amq="http://activemq.apache.org/schema/core"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:p="http://www.springframework.org/schema/p" xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
            http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
            http://activemq.apache.org/schema/core http://activemq.apache.org/schema/core/activemq-core.xsd
            http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd">

    <bean id="dao" class="pl.touk.tx.fun.SimpleDao" p:dataSource-ref="dataSource"/>

    <bean id="service" class="pl.touk.tx.fun.SimplePersonService" p:dao-ref="dao"/>

    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
        <property name="driverClassName" value="org.h2.Driver"/>
        <property name="url" value="jdbc:h2:mem:pc;MODE=ORACLE"/>
        <property name="username" value="sa"/>
        <property name="password" value=""/>
    </bean>

    <bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager" p:dataSource-ref="dataSource"/>

    <tx:annotation-driven transaction-manager="txManager" />

    <context:property-placeholder location="classpath:funTx.properties"/>

    <!-- setup an embedded JMS Broker for testing purposes -->
    <broker xmlns="http://activemq.apache.org/schema/core" 
            id="my-broker" useJmx="true" persistent="false" brokerName="localhost">
<!--
        <plugins>
            <redeliveryPlugin fallbackToDeadLetter="true" sendToDlqIfMaxRetriesExceeded="true">
                <redeliveryPolicyMap>
                    <redeliveryPolicyMap>
                        <setRedeliveryPolicyEntries>
                            <redeliveryPolicy queue="sample.messages" maximumRedeliveries="3"/>
                        </setRedeliveryPolicyEntries>
                        <defaultEntry>
                            <redeliveryPolicy maximumRedeliveries="0" initialRedeliveryDelay="5000"/>
                        </defaultEntry>
                    </redeliveryPolicyMap>
                </redeliveryPolicyMap>
            </redeliveryPlugin>
        </plugins>
-->
        <transportConnectors>
            <transportConnector uri="tcp://localhost:61616" />
        </transportConnectors>
    </broker>

    <bean id="amq.connectionFactory" class="org.apache.activemq.ActiveMQConnectionFactory">
        <property name="brokerURL" value="tcp://localhost:61616?jms.redeliveryPolicy.maximumRedeliveries=1" />
    </bean>

    <bean id="consumer.connectionFactory" class="org.springframework.jms.connection.CachingConnectionFactory">
        <constructor-arg ref="amq.connectionFactory" />
    </bean>

    <bean id="producer.sampleProducer" class="pl.touk.tx.fun.jms.SampleMessageProducer"/>
    <bean id="jmsProducerTemplate" class="org.springframework.jms.core.JmsTemplate"
          p:connectionFactory-ref="consumer.connectionFactory"
          p:defaultDestinationName="sample.messages"/>
    
    <bean id="consumer.messageListener" class="pl.touk.tx.fun.jms.CustomMessageListener" />
    <bean id="consumer.jmsContainer" class="org.springframework.jms.listener.DefaultMessageListenerContainer">
        <property name="connectionFactory" ref="consumer.connectionFactory" />
        <property name="destinationName" value="sample.messages" />
        <property name="messageListener" ref="consumer.messageListener" />
        <!--
        <property name="transactionManager" ref="local.transactionManager"/>
        -->
        <property name="sessionTransacted" value="true"/>
    </bean>

    <bean id="local.transactionManager" class="org.springframework.jms.connection.JmsTransactionManager">
        <!-- can also refer to amq.connectionFactory -->
        <property name="connectionFactory" ref="consumer.connectionFactory" />
    </bean>
</beans>